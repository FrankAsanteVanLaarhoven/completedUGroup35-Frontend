{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Ataire/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Ataire\\\\frontend\\\\pages\\\\order\\\\[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ORDER_QUERY($id: ID!) {\\n    order: Order(where: { id: $id }) {\\n      id\\n      charge\\n      total\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        price\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Header from '../../components/Header';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../comp';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \"Single Order Page \", order.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleOrderPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["D:/Ataire/frontend/pages/order/[id].js"],"names":["useQuery","gql","Header","ErrorMessage","OrderStyles","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order","total"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAyBA,eAAe,SAASK,eAAT,OAAoC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBAChBP,QAAQ,CAACK,kBAAD,EAAqB;AAC5DG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAZ;AADiD,GAArB,CADQ;AAAA,MACzCC,IADyC,aACzCA,IADyC;AAAA,MACnCC,KADmC,aACnCA,KADmC;AAAA,MAC5BC,OAD4B,aAC5BA,OAD4B;;AAIjD,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALsC,MAMzCE,KANyC,GAM/BH,IAN+B,CAMzCG,KANyC;AAOjD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,wBAEqBA,KAAK,CAACC,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAbuBR,e;UACWN,Q;;;KADXM,e","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport Header from '../../components/Header';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport OrderStyles from '../../comp'\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n  query SINGLE_ORDER_QUERY($id: ID!) {\r\n    order: Order(where: { id: $id }) {\r\n      id\r\n      charge\r\n      total\r\n      user {\r\n        id\r\n      }\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        photo {\r\n          image {\r\n            publicUrlTransformed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SingleOrderPage({ query }) {\r\n  const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n    variables: { id: query.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <ErrorMessage error={error} />;\r\n  const { order } = data;\r\n  return (\r\n    <div>\r\n      <Header />\r\n      Single Order Page {order.total}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}