{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ataire\\\\frontend\\\\components\\\\Checkout.js\";\n// import Form from 'react-bootstrap/Form';\n// import Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Head from 'next/head';\n// import CheckoutStyles from './styles/CheckoutStyles';\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { useRouter } from 'next/dist/client/router';\nimport AtaireButton from './styles/AtaireButton';\nimport { CURRENT_USER_QUERY } from './User';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    // Stop form from submitting and turn on loader\n    e.preventDefault();\n    setLoading(true);\n    console.log('Handle Submit'); // Start page transition\n\n    nProgress.start(); // Create Payment method through stripe (Return Token IF sucsessful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); // Handle any errors from stripe\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return; // stops the checkout\n    } // Send the token to keystone server via mutation.\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order!`);\n    console.log(order); // Change the page to view the order\n\n    router.push({\n      pathname: '/order/',\n      // pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); // Turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AtaireButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };\n/*\r\n      <CheckoutStyles>\r\n      <Head>\r\n        <title>Ataire | Checkout </title>\r\n      </Head>\r\n      <div id=\"form\">\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <div className=\"item\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <div className=\"item\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control placeholder=\"1234 Main St\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridAddress2\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>United Kingdom</option>\r\n                  <option>France</option>\r\n                  <option>Spain</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <div className=\"item\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Postcode</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Phone Number\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Payment Method</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>Paypal</option>\r\n                  <option>Debit/Credit Card</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <div className=\"item\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </CheckoutStyles>\r\n*/","map":{"version":3,"sources":["D:/Ataire/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","nProgress","gql","useMutation","useRouter","AtaireButton","CURRENT_USER_QUERY","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","router","checkout","graphQLError","refetchQueries","query","handleSubmit","e","preventDefault","console","log","start","paymentMethod","createPaymentMethod","type","card","getElement","done","order","variables","token","id","push","pathname","data","message","Checkout"],"mappings":"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","sourcesContent":["// import Form from 'react-bootstrap/Form';\r\n// import Col from 'react-bootstrap/Col';\r\n// import Button from 'react-bootstrap/Button';\r\n// import Head from 'next/head';\r\n// import CheckoutStyles from './styles/CheckoutStyles';\r\nimport styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport { useState } from 'react';\r\nimport nProgress from 'nprogress';\r\nimport gql from 'graphql-tag';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport AtaireButton from './styles/AtaireButton';\r\nimport { CURRENT_USER_QUERY } from './User';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n  mutation CREATE_ORDER_MUTATION($token: String!) {\r\n    checkout(token: $token) {\r\n      id\r\n      charge\r\n      total\r\n      items {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const router = useRouter();\r\n  const [checkout, { error: graphQLError }] = useMutation(\r\n    CREATE_ORDER_MUTATION,\r\n    {\r\n      refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n    }\r\n  );\r\n  async function handleSubmit(e) {\r\n    // Stop form from submitting and turn on loader\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log('Handle Submit');\r\n    // Start page transition\r\n    nProgress.start();\r\n    // Create Payment method through stripe (Return Token IF sucsessful)\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    console.log(paymentMethod);\r\n    // Handle any errors from stripe\r\n    if (error) {\r\n      setError(error);\r\n      nProgress.done();\r\n      return; // stops the checkout\r\n    }\r\n    // Send the token to keystone server via mutation.\r\n    const order = await checkout({\r\n      variables: {\r\n        token: paymentMethod.id,\r\n      },\r\n    });\r\n    console.log(`Finished with the order!`);\r\n    console.log(order);\r\n    // Change the page to view the order\r\n    router.push({\r\n      pathname: '/order/',\r\n      // pathname: `/order/[id]`,\r\n      query: {\r\n        id: order.data.checkout.id,\r\n      },\r\n    });\r\n\r\n    // Turn the loader off\r\n    setLoading(false);\r\n    nProgress.done();\r\n  }\r\n\r\n  return (\r\n    <CheckoutFormStyles onSubmit={handleSubmit}>\r\n      {error && <p>{error.message}</p>}\r\n      {graphQLError && <p>{graphQLError.message}</p>}\r\n      <CardElement />\r\n      <AtaireButton>Check Out Now</AtaireButton>\r\n    </CheckoutFormStyles>\r\n  );\r\n}\r\n\r\nfunction Checkout() {\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport { Checkout };\r\n\r\n/*\r\n      <CheckoutStyles>\r\n      <Head>\r\n        <title>Ataire | Checkout </title>\r\n      </Head>\r\n      <div id=\"form\">\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <div className=\"item\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <div className=\"item\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control placeholder=\"1234 Main St\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridAddress2\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>United Kingdom</option>\r\n                  <option>France</option>\r\n                  <option>Spain</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <div className=\"item\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Postcode</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Phone Number\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Payment Method</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>Paypal</option>\r\n                  <option>Debit/Credit Card</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <div className=\"item\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </CheckoutStyles>\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}