{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ataire\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport { debounce } from 'lodash';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Search() {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  console.log(data);\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      console.log('Input Changed');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log('Selected Item Changed');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.name,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), item.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/Ataire/frontend/components/Search.js"],"names":["useLazyQuery","gql","resetIdCounter","useCombobox","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","findItems","loading","data","error","fetchPolicy","items","searchTerms","console","log","findItemsButChill","inputValue","getMenuProps","getInputProps","getComboboxProps","onInputValueChange","variables","searchTerm","onSelectedItemChange","type","placeholder","id","className","map","item","photo","image","publicUrlTransformed","name"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGP,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,SAASQ,MAAT,GAAkB;AAC/B,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAZ,IAAwCb,YAAY,CACxDQ,qBADwD,EAExD;AACEM,IAAAA,WAAW,EAAE;AADf,GAFwD,CAA1D;AAMA,QAAMC,KAAK,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,WAAN,KAAqB,EAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,QAAMO,iBAAiB,GAAGf,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AACAR,EAAAA,cAAc;AACd,QAAM;AACJkB,IAAAA,UADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA;AAJI,MAKFpB,WAAW,CAAC;AACdY,IAAAA,KAAK,EAAE,EADO;;AAEdS,IAAAA,kBAAkB,GAAG;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,MAAAA,iBAAiB,CAAC;AAChBM,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAEN;AADH;AADK,OAAD,CAAjB;AAKD,KATa;;AAUdO,IAAAA,oBAAoB,GAAG;AACrBV,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAZa,GAAD,CALf;AAmBA,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASK,gBAAgB,EAAzB;AAAA,6BACE,mCACMD,aAAa,CAAC;AAChBM,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAEpB,OAAO,GAAG,SAAH,GAAe;AAJjB,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,QAAD,kCAAcU,YAAY,EAA1B;AAAA,gBACGN,KAAK,CAACiB,GAAN,CAAWC,IAAD,iBACT,QAAC,YAAD;AAAA,gCACE;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,oBADxB;AAEE,UAAA,GAAG,EAAEH,IAAI,CAACI,IAFZ;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGJ,IAAI,CAACI,IANR;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { resetIdCounter, useCombobox } from 'downshift';\r\nimport { debounce } from 'lodash';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\n\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\r\n    searchTerms: allProducts(\r\n      where: {\r\n        OR: [\r\n          { name_contains_i: $searchTerm }\r\n          { description_contains_i: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      photo {\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Search() {\r\n  const [findItems, { loading, data, error }] = useLazyQuery(\r\n    SEARCH_PRODUCTS_QUERY,\r\n    {\r\n      fetchPolicy: 'no-cache',\r\n    }\r\n  );\r\n  const items = data?.searchTerms || [];\r\n  console.log(data);\r\n  const findItemsButChill = debounce(findItems, 350);\r\n  resetIdCounter();\r\n  const {\r\n    inputValue,\r\n    getMenuProps,\r\n    getInputProps,\r\n    getComboboxProps,\r\n  } = useCombobox({\r\n    items: [],\r\n    onInputValueChange() {\r\n      console.log('Input Changed');\r\n      findItemsButChill({\r\n        variables: {\r\n          searchTerm: inputValue,\r\n        },\r\n      });\r\n    },\r\n    onSelectedItemChange() {\r\n      console.log('Selected Item Changed');\r\n    },\r\n  });\r\n  return (\r\n    <SearchStyles>\r\n      <div {...getComboboxProps()}>\r\n        <input\r\n          {...getInputProps({\r\n            type: 'search',\r\n            placeholder: 'Search for an Item',\r\n            id: 'search',\r\n            className: loading ? 'loading' : '',\r\n          })}\r\n        />\r\n      </div>\r\n      <DropDown {...getMenuProps()}>\r\n        {items.map((item) => (\r\n          <DropDownItem>\r\n            <img\r\n              src={item.photo.image.publicUrlTransformed}\r\n              alt={item.name}\r\n              width=\"50\"\r\n            />\r\n            {item.name}\r\n          </DropDownItem>\r\n        ))}\r\n      </DropDown>\r\n    </SearchStyles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}