{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Ataire\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport { debounce } from 'lodash';\nimport { useRouter } from 'next/dist/client/router';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nimport Link from 'next/link';\nconst IndexSearch = styled.div.withConfig({\n  displayName: \"Search__IndexSearch\",\n  componentId: \"jovxb7-0\"\n})([\"#search{z-index:5;background-color:white;position:absolute;align-self:center;width:40vw;height:30px;border:3px black solid;left:28vw;bottom:50vh;}\"]);\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Search() {\n  const router = useRouter();\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  console.log(data);\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    isOpen,\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items,\n\n    onInputValueChange() {\n      console.log('Input Changed');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange({\n      selectedItem\n    }) {\n      router.push({\n        pathname: `/product/${selectedItem.id}`\n      });\n    },\n\n    itemToString: item => (item === null || item === void 0 ? void 0 : item.name) || ''\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [isOpen && items.map((item, index) => /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        highlighted: index === highlightedIndex,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this)\n      }), item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)), isOpen && !items.length && !loading && /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: [\"Sorry, no products found for \", inputValue, \".\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/Ataire/frontend/components/Search.js"],"names":["useLazyQuery","styled","gql","resetIdCounter","useCombobox","debounce","useRouter","DropDown","DropDownItem","SearchStyles","Link","IndexSearch","div","SEARCH_PRODUCTS_QUERY","Search","router","findItems","loading","data","error","fetchPolicy","items","searchTerms","console","log","findItemsButChill","isOpen","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","highlightedIndex","onInputValueChange","variables","searchTerm","onSelectedItemChange","selectedItem","push","pathname","id","itemToString","item","name","type","placeholder","className","map","index","length"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport styled from 'styled-components';\r\nimport gql from 'graphql-tag';\r\nimport { resetIdCounter, useCombobox } from 'downshift';\r\nimport { debounce } from 'lodash';\r\nimport { useRouter } from 'next/dist/client/router';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\nimport Link from 'next/link';\r\n\r\nconst IndexSearch = styled.div`\r\n  #search {\r\n    z-index: 5;\r\n    background-color: white;\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 40vw;\r\n    height: 30px;\r\n    border: 3px black solid;\r\n    left: 28vw;\r\n    bottom: 50vh;\r\n  }\r\n`;\r\n\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\r\n    searchTerms: allProducts(\r\n      where: {\r\n        OR: [\r\n          { name_contains_i: $searchTerm }\r\n          { description_contains_i: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      photo {\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Search() {\r\n  const router = useRouter();\r\n  const [findItems, { loading, data, error }] = useLazyQuery(\r\n    SEARCH_PRODUCTS_QUERY,\r\n    {\r\n      fetchPolicy: 'no-cache',\r\n    }\r\n  );\r\n  const items = data?.searchTerms || [];\r\n  console.log(data);\r\n  const findItemsButChill = debounce(findItems, 350);\r\n  resetIdCounter();\r\n  const {\r\n    isOpen,\r\n    inputValue,\r\n    getMenuProps,\r\n    getInputProps,\r\n    getComboboxProps,\r\n    getItemProps,\r\n    highlightedIndex,\r\n  } = useCombobox({\r\n    items,\r\n    onInputValueChange() {\r\n      console.log('Input Changed');\r\n      findItemsButChill({\r\n        variables: {\r\n          searchTerm: inputValue,\r\n        },\r\n      });\r\n    },\r\n    onSelectedItemChange({ selectedItem }) {\r\n      router.push({\r\n        pathname: `/product/${selectedItem.id}`,\r\n      });\r\n    },\r\n    itemToString: (item) => item?.name || '',\r\n  });\r\n  return (\r\n    <SearchStyles>\r\n      <div {...getComboboxProps()}>\r\n        <input\r\n          {...getInputProps({\r\n            type: 'search',\r\n            placeholder: 'Search for an Item',\r\n            id: 'search',\r\n            className: loading ? 'loading' : '',\r\n          })}\r\n        />\r\n      </div>\r\n      <DropDown {...getMenuProps()}>\r\n        {isOpen &&\r\n          items.map((item, index) => (\r\n            <DropDownItem\r\n              key={item.id}\r\n              {...getItemProps({ item })}\r\n              highlighted={index === highlightedIndex}\r\n            ><Link>\r\n              {/* <img\r\n                src={item.photo.image.publicUrlTransformed}\r\n                alt={item.name}\r\n                width=\"50\"\r\n              /> */}\r\n              {item.name}\r\n              </Link>\r\n            </DropDownItem>\r\n          ))}\r\n        {isOpen && !items.length && !loading && (\r\n          <DropDownItem>\r\n            Sorry, no products found for {inputValue}.{' '}\r\n          </DropDownItem>\r\n        )}\r\n      </DropDown>\r\n    </SearchStyles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}