{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Ataire\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\n// import Form from 'react-bootstrap/Form';\n// import Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Head from 'next/head';\n// import CheckoutStyles from './styles/CheckoutStyles';\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport AtaireButton from './styles/AtaireButton';\nimport nProgress from 'nprogress';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  function handleSubmit(e) {\n    // Stop form from submitting and turn on loader\n    e.preventDefault();\n    setLoading(true);\n    console.log('Handle Submit'); // Start page transition\n\n    nProgress.start(); // Create Payment method through stripe (Return Token IF sucsessful)\n\n    stripe.createPaymentMethod({\n      type: 'card',\n      card: elements\n    }); // Handle any errors from stripe\n    // Send the token to keystone server via mutation.\n    // Change the page to view the order\n    // Close the cart\n    // Turn the loader off\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AtaireButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"/GTcQkkNlUgykvoAY6A4l3RHUP4=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n/*\r\n      <CheckoutStyles>\r\n      <Head>\r\n        <title>Ataire | Checkout </title>\r\n      </Head>\r\n      <div id=\"form\">\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <div className=\"item\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <div className=\"item\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control placeholder=\"1234 Main St\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridAddress2\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>United Kingdom</option>\r\n                  <option>France</option>\r\n                  <option>Spain</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <div className=\"item\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Postcode</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Phone Number\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Payment Method</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>Paypal</option>\r\n                  <option>Debit/Credit Card</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <div className=\"item\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </CheckoutStyles>\r\n*/\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["D:/Ataire/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","useState","AtaireButton","nProgress","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","Checkout"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,IAAMC,kBAAkB,GAAGT,MAAM,CAACU,IAAV;AAAA;AAAA;AAAA,8IAAxB;KAAMD,kB;AASN,IAAME,SAAS,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACIT,QAAQ,EADZ;AAAA,MACfU,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEfY,OAFe;AAAA,MAENC,UAFM;;AAGtB,MAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,MAAMgB,QAAQ,GAAGjB,WAAW,EAA5B;;AACA,WAASkB,YAAT,CAAsBC,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAJuB,CAKvB;;AACAlB,IAAAA,SAAS,CAACmB,KAAV,GANuB,CAOvB;;AACAP,IAAAA,MAAM,CAACQ,mBAAP,CAA2B;AACzBC,MAAAA,IAAI,EAAE,MADmB;AAEzBC,MAAAA,IAAI,EAAET;AAFmB,KAA3B,EARuB,CAYvB;AACA;AACA;AACA;AACA;AACD;;AAED,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEC,YAA9B;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA9BQP,Y;UAGQV,S,EACED,W;;;MAJVW,Y;;AAgCT,SAASgB,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEpB,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQoB,Q;AAQT,SAASA,QAAT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import Form from 'react-bootstrap/Form';\r\n// import Col from 'react-bootstrap/Col';\r\n// import Button from 'react-bootstrap/Button';\r\n// import Head from 'next/head';\r\n// import CheckoutStyles from './styles/CheckoutStyles';\r\nimport styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport { useState } from 'react';\r\nimport AtaireButton from './styles/AtaireButton';\r\nimport nProgress from 'nprogress';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  function handleSubmit(e) {\r\n    // Stop form from submitting and turn on loader\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log('Handle Submit');\r\n    // Start page transition\r\n    nProgress.start();\r\n    // Create Payment method through stripe (Return Token IF sucsessful)\r\n    stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements\r\n    })\r\n    // Handle any errors from stripe\r\n    // Send the token to keystone server via mutation.\r\n    // Change the page to view the order\r\n    // Close the cart\r\n    // Turn the loader off\r\n  }\r\n\r\n  return (\r\n    <CheckoutFormStyles onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <AtaireButton>Check Out Now</AtaireButton>\r\n    </CheckoutFormStyles>\r\n  );\r\n}\r\n\r\nfunction Checkout() {\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport { Checkout };\r\n\r\n/*\r\n      <CheckoutStyles>\r\n      <Head>\r\n        <title>Ataire | Checkout </title>\r\n      </Head>\r\n      <div id=\"form\">\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <div className=\"item\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <div className=\"item\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control placeholder=\"1234 Main St\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridAddress2\">\r\n            <div className=\"item\">\r\n              <Form.Label>Address 2</Form.Label>\r\n              <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n            </div>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>United Kingdom</option>\r\n                  <option>France</option>\r\n                  <option>Spain</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <div className=\"item\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Postcode</Form.Label>\r\n                <Form.Control />\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <div className=\"item\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Phone Number\" />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <div className=\"item\">\r\n                <Form.Label>Payment Method</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Please Select\">\r\n                  <option>Please Select</option>\r\n                  <option>Paypal</option>\r\n                  <option>Debit/Credit Card</option>\r\n                </Form.Control>\r\n              </div>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <div className=\"item\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </CheckoutStyles>\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}