{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Ataire/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query BASKET_ITEMS_QUERY {\\n    allCartItems {\\n      quantity\\n      product {\\n        id\\n        price\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar BASKET_ITEMS_QUERY = gql(_templateObject());\nexport default function calcTotalPrice(cart) {\n  _s();\n\n  var _useQuery = useQuery(BASKET_ITEMS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  return cart.reduce(function (tally, cartItem) {\n    if (!cartItem.product) return tally;\n    return tally + cartItem.quantity * cartItem.product.price;\n  }, 0);\n}\n\n_s(calcTotalPrice, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", true);","map":{"version":3,"sources":["D:/Ataire/frontend/lib/calcTotalPrice.js"],"names":["BASKET_ITEMS_QUERY","gql","calcTotalPrice","cart","useQuery","data","error","loading","reduce","tally","cartItem","product","quantity","price"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,kBAAkB,GAAGC,GAAH,mBAAxB;AAYA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAAA;;AAAA,kBACVC,QAAQ,CAACJ,kBAAD,CADE;AAAA,MACnCK,IADmC,aACnCA,IADmC;AAAA,MAC7BC,KAD6B,aAC7BA,KAD6B;AAAA,MACtBC,OADsB,aACtBA,OADsB;;AAE3C,SAAOJ,IAAI,CAACK,MAAL,CAAY,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACtC,QAAI,CAACA,QAAQ,CAACC,OAAd,EAAuB,OAAOF,KAAP;AAEvB,WAAOA,KAAK,GAAGC,QAAQ,CAACE,QAAT,GAAoBF,QAAQ,CAACC,OAAT,CAAiBE,KAApD;AACD,GAJM,EAIJ,CAJI,CAAP;AAKD;;GAPuBX,c","sourcesContent":["const BASKET_ITEMS_QUERY = gql`\r\n  query BASKET_ITEMS_QUERY {\r\n    allCartItems {\r\n      quantity\r\n      product {\r\n        id\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function calcTotalPrice(cart) {\r\n  const { data, error, loading } = useQuery(BASKET_ITEMS_QUERY);\r\n  return cart.reduce((tally, cartItem) => {\r\n    if (!cartItem.product) return tally;\r\n\r\n    return tally + cartItem.quantity * cartItem.product.price;\r\n  }, 0);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}